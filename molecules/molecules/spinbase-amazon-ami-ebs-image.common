# Define an alternative execution strategy, in this case, the value must be
execution_strategy: iso_to_tar

# Error script command, executed when something went wrong and molecule has
# to terminate the execution
# Variables exported:
# LOOP_DEVICE = loop device (/dev/loopN) currently in use
%env error_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/image_error_script.sh

# Outer chroot script command, to be executed outside destination chroot before
# before entering it (and before inner_chroot_script)
%env outer_chroot_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/remaster_pre.sh

# Inner chroot script command, to be executed inside destination chroot before
# packing it
%env inner_chroot_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/amazon_ebs_image_inner_chroot_script.sh

# Inner chroot script command, to be executed inside destination chroot after
# packages installation and removal
%env inner_chroot_script_after: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/amazon_ebs_image_inner_chroot_script_after.sh

# Outer chroot script command, to be executed outside destination chroot before
# before entering it (and AFTER inner_chroot_script)
%env outer_chroot_script_after: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/amazon_ebs_image_remaster_post.sh

# Pre-tar building script. Hook called before tar file creation
# Variables exported:
# CHROOT_DIR = path pointing to the working chroot (the one that gets modified)
# TAR_PATH = path pointing to the destination tar file
# TAR_CHECKSUM_PATH = path pointing to the destination tar file checksum (md5)
%env pre_tar_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/amazon_ebs_image_pre_tar_script.sh

# Destination directory for the image path (MANDATORY)
%env destination_tar_directory: ${SABAYON_MOLECULE_HOME:-/sabayon}/images

# Compression method (default is: gz). Supported compression methods: gz, bz2
# compression_method: gz

# Specify an alternative tar file name (tar file name will be automatically
# produced otherwise)
# tar_name:

# Alternative ISO file mount command (default is: mount -o loop -t iso9660)
# iso_mounter:

# Alternative ISO umounter command (default is: umount)
# iso_umounter:

# Alternative squashfs file mount command (default is: mount -o loop -t squashfs)
# squash_mounter:

# Alternative ISO squashfs umount command (default is: umount)
# squash_umounter:

# List of packages that would be removed from chrooted system (comma separated)
packages_to_remove:
	app-admin/anaconda,
	net-misc/networkmanager,
	net-firewall/ufw,
	sys-kernel/linux-sabayon,
	sys-boot/grub:2

# Custom shell call to packages removal (default is: equo remove)
# custom_packages_remove_cmd:

# List of packages that would be added from chrooted system (comma separated)
packages_to_add:
	app-admin/aws-rds-tools,
	app-admin/aws-iam-tools,
	app-admin/ec2-ami-tools,
	app-admin/ec2-api-tools,
	app-admin/eselect-bzimage,
	sys-kernel/linux-ec2,
	sys-process/atop

# Custom shell call to packages add (default is: equo install)
# custom_packages_add_cmd:

# Custom command for updating repositories (default is: equo update)
# repositories_update_cmd:

# Determine whether repositories update should be run (if packages_to_add is set)
# (default is: no), values are: yes, no.
# execute_repositories_update: no

# Directories to remove completely (comma separated)
# paths_to_remove:

# Directories to empty (comma separated)
# paths_to_empty:

# Define an alternative execution strategy, in this case, the value must be
# "iso_remaster"
execution_strategy: iso_remaster

# Release string
release_string: Sabayon Linux

# File to write release string
release_file: /etc/sabayon-edition

# ISO Image title
iso_title: Sabayon Gaming Edition

# Enable XZ compression in mksquashfs
extra_mksquashfs_parameters: -comp xz -Xbcj x86

# Outer chroot script command, to be executed outside destination chroot before
# before entering it (and before inner_chroot_script)
%env outer_chroot_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/remaster_pre.sh

# Execute repositories update here, in a more fault-tolerant flavor
%env inner_chroot_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/remaster_generic_inner_chroot_script.sh

# Inner chroot script command, to be executed inside destination chroot after
# packages installation and removal
%env inner_chroot_script_after: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/remaster_gaming_inner_chroot_script_after.sh

# Outer chroot script command, to be executed outside destination chroot before
# before entering it (and AFTER inner_chroot_script)
%env outer_chroot_script_after: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/gaming_remaster_post.sh

# Used to umount /proc and unbind packages dir
%env error_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/remaster_error_script.sh

# Pre-ISO building script. Hook to be able to copy kernel images in place, for example
%env pre_iso_script: ${SABAYON_MOLECULE_HOME:-/sabayon}/scripts/generic_pre_iso_script.sh "Gaming Edition"

# Destination directory for the ISO image path (MANDATORY)
%env destination_iso_directory: ${SABAYON_MOLECULE_HOME:-/sabayon}/iso

# List of packages that would be added from chrooted system (comma separated)
packages_to_add:
	games-arcade/frozen-bubble,
	games-arcade/stepmania,
	games-arcade/mars-bin,
	games-fps/nexuiz,
	games-fps/alienarena,
	games-fps/tremulous,
	games-fps/warsow,
	games-puzzle/neverball,
	games-puzzle/pingus,
	games-simulation/micropolis,
	games-simulation/simutrans,
	games-strategy/0ad,
	games-strategy/freeciv,
	games-strategy/scorched3d,
	games-strategy/spring,
	games-strategy/warmux,
	games-strategy/warzone2100,
	games-strategy/wesnoth,
	games-sports/foobillard,
	games-sports/torcs,
	games-util/springlobby,
	gnome-extra/gnome-games

packages_to_remove:
	app-crypt/gnupg,
	app-dicts/myspell-de,
	app-dicts/myspell-en,
	app-dicts/myspell-es,
	app-dicts/myspell-fr,
	app-dicts/myspell-it,
	app-dicts/myspell-nl,
	app-editors/gedit,
	app-emulation/wine,
	app-office/libreoffice,
	app-pda/gnome-pilot,
	app-pda/pilot-link,
	app-text/libwpd,
	app-text/libwpg,
	dev-db/mysql,
	dev-python/pygame,
	dev-python/twisted,
	dev-util/cppunit,
	gnome-base/gnome-shell,
	gnome-extra/gnome-utils,
	gnome-extra/gtkhtml,
	mail-client/evolution,
	media-libs/babl,
	media-libs/gegl,
	media-libs/netpbm,
	media-libs/vigra,
	media-gfx/gimp,
	media-plugins/live,
	media-tv/xbmc,
	media-video/dirac,
	media-video/mplayer,
	net-p2p/transmission-gtk,
	net-print/foomatic-db-ppds,
	net-print/foomatic-filters-ppds,

# Custom shell call to packages add (default is: equo install)
# custom_packages_add_cmd: 

# Custom command for updating repositories (default is: equo update)
# repositories_update_cmd:

# Determine whether repositories update should be run (if packages_to_add is set)
# (default is: no), values are: yes, no.
execute_repositories_update: no

# Directories to remove completely (comma separated)
# paths_to_remove:

# Directories to empty (comma separated)
# paths_to_empty:
